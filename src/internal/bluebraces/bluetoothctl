#!/bin/bash

eval_exit_code() {
    [[ -z $BLUETOOTHCTL_MUST_FAIL ]] && echo 0 || echo 1
}

get_random_secs() {
    #secs=$(grep -m1 -ao '[0-9]' /dev/urandom | sed s/0/10/ | head -n1)
    #echo $secs
    echo 0
}

power() {
    printf "[power $1]\n" >&2
    [[ $1 == "on" || $1 == "off" ]] && return `eval_exit_code` || return 1
}

discoverable() {
    printf "[discoverable $1]\n" >&2
    [[ $1 == "on" || $1 == "off" ]] && return `eval_exit_code` || return 1
}

pair() {
    printf "[pair $1]\n" >&2
    [[ ! -z $1 ]] && return `eval_exit_code` || return 1
}

remove() {
    printf "[remove $1]\n" >&2
    [[ ! -z $1 ]] && return `eval_exit_code`|| return 1
}

connect() {
    printf "[connect $1]\n" >&2
    [[ ! -z $1 ]] && return `eval_exit_code` || return 1
}

disconnect() {
    printf "[disconnect $1]\n" >&2
    [[ ! -z $1 ]] && return `eval_exit_code` || return 1
}

trust() {
    printf "[trust $1]\n" >&2
    [[ ! -z $1 ]] && return `eval_exit_code` || return 1
}

untrust() {
    printf "[untrust $1]\n" >&2
    [[ ! -z $1 ]] && return `eval_exit_code` || return 1
}

scan() {
    retval=`eval_exit_code`
    if [[ $retval == 0 ]] ; then
        printf "Discovery started\n" >&2
        sleep `get_random_secs`
        printf "[CHG] Controller 5C:CD:5B:88:05:80 Discovering: yes\n" >&2
        sleep `get_random_secs`
        printf "[NEW] Device E3:91:B6:02:8C:47 GT FUN\n" >&2
        sleep `get_random_secs`
        printf "[NEW] Device B5:D0:38:C0:ED:74 EASYWAY-BLE\n" >&2
        sleep `get_random_secs`
        printf "[CHG] Device BA:BA:CA:BA:BA:CA PHONE-BLAU\n" >&2
        sleep `get_random_secs`
        printf "[NEW] Device 42:42:42:42:42:42 zaphoid-spks\n" >&2
        sleep `get_random_secs`
        printf "[CHG] Device E3:91:B6:02:8C:47 RSSI: -50\n" >&2
        sleep `get_random_secs`
    fi
    read
    return $retval
}

info() {
    info_template="Device %s (public)
    Name: %s
    Alias: %s
    Class: 0x00340404
    Icon: audio-headset
    Paired: no
    Bonded: no
    Trusted: no
    Blocked: no
    Connected: no
    LegacyPairing: no
    ManufacturerData Key: 0x5754
    ManufacturerData Value:
  53 4d 4f aa 58                                   SMO.X\n"
    retval=`eval_exit_code`
    if [[ $retval == 0 ]] ; then
        case $1 in
            E3:91:B6:02:8C:47) printf "$info_template" $1 "GT FUN" "GT FUN" >&2 ;;
            B5:D0:38:C0:ED:74) printf "$info_template" $1 "EASYWAY-BLE" "EASYWAY-BLE" >&2 ;;
            BA:BA:CA:BA:BA:CA) printf "$info_template" $1 "PHONE-BLAU" "PHONE-BLAU" >&2 ;;
            42:42:42:42:42:42) printf "$info_template" $1 "zaphoid-spks" "zaphoid-spks" >&2 ;;
            E3:91:B6:02:8C:47) printf "$info_template" $1 "RSSI: -50" "RSSI: -50" >&2 ;;
            *) printf "Device $1 not available\n" >&2 && exit 1 ;;
        esac
    fi
    return $retval
}

case $1 in
    power) exit `power $2` ;;
    discoverable) exit `discoverable $2` ;;
    pair) exit `pair $2` ;;
    remove) exit `remove $2` ;;
    connect) exit `connect $2` ;;
    disconnect) exit `disconnect $2` ;;
    trust) exit `trust $2` ;;
    untrust) exit `untrust $2` ;;
    scan) exit `scan $2` ;;
    info) exit `info $2` ;;
    *) exit 1 ;;
esac
